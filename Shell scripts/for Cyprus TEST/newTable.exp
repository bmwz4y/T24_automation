#!/usr/bin/expect -f

# -------------------------------------------------------------------------
# author Yahya.Mubaideen@ahli.com
# expect script for new Table script
# this is part of another script, not to be used as standalone
# -------------------------------------------------------------------------
# This Expect script was generated by autoexpect on Mon Jun 24 10:05:26 2019
# then edited by author

set userName "YM3696T"
set pass "Jan/2020"

set tableName [lindex $argv 0] ;# first sent with command should be the name

# make it wait 0.2 seconds before any send to avoid errors
set force_conservative 1  ;# set to 1 to force conservative mode even if script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .2}
	proc send {ignore arg} {
		sleep .2
		exp_send -s -- $arg
	}
}

# make it hang instead of timing out to debug errors if they happen
set timeout -1

# launch t24
spawn tRun EX
# expect buffer length
match_max 100000

# login
expect "*PLEASE ENTER YOUR SIGN ON NAME"
send -- "$userName\r"
expect "*PLEASE ENTER YOUR PASSWORD"
send -- "$pass\r"
# optional selection in expect script works like case block, exp_continue makes it do what the next option has (to avoid duplication of next thing)
expect -timeout 3 {
	# retry login if it shows SECURITY.VIOLATION
	"*SECURITY.VIOLATION" { send -- "Y\r"; expect "*PLEASE ENTER YOUR SIGN ON NAME"; send -- "$userName\r"; expect "*PLEASE ENTER YOUR PASSWORD"; send -- "$pass\r"; exp_continue }
	# or if it shows that "fees overdue message"
	"*YOUR MAINTENANCE FEES ARE OVERDUE" { send -- "Y\r" }
}
# open EB.DEV.HELPER application in input mode with this record
expect "*AWAITING APPLICATION"
send -- "EB.DEV.HELPER I $tableName\r"
# based on the existence of the record to get inside and overwrite or skip after a few seconds
expect -timeout 3 "*AWAITING PAGE INSTRUCTIONS" { send -- "1\r"; exp_continue }
# fill PGM.FILE YES
send -- "Y\r"
# fill FILE.CONTROL YES
send -- "Y\r"
# fill INSERT YES
send -- "Y\r"
# fill CREATE.FILE YES
send -- "Y\r"
# fill UPDATE.SS YES
send -- "Y\r"
# save the record using ctrl-v enter
send -- "\x16\r"
# verify the record in that mode
expect "*AWAITING ID"
send -- "V\r"
send -- "$tableName\r"
expect "*AWAITING PAGE INSTRUCTIONS"
send -- "\x16\r"
# while it keeps showing CONTINUE (Y) reply with Y, until it shows AWAITING ID do ctrl-u enter
expect {
    "*CONTINUE (Y)" { send -- "Y\r"; exp_continue }
	"*AWAITING ID" { send -- "\x15\r" }
}
# do ctrl-u multiple times to make sure we're back at AWAITING APPLICATION
send -- "\x15\r"
send -- "\x15\r"
send -- "\x15\r"
# exit t24
send -- "BK\r"
# return user to terminal
expect eof
